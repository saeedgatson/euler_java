// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

import java.lang.*;

public class P044PentagonNumbers {
  private static boolean isPentagonal(int number) {
    int check = (( (int) Math.sqrt((24 * number) + 1)) + 1) / 6;
    if(check % 1 != 0 ) return false;
    return true;
  }

  private static void BrutForce() {
    int result = 0;
    boolean found = false;
    int i = 1;
    int k = 0;

    while(!found) {
      i++;
      int pk = i * (3 * i - 1) / 2;

      for(int j = i - 1; j > 0; j--) {
        int pj = j * (3 * j - 1) / 2;
        if(isPentagonal(pk - pj) && isPentagonal(pk + pj)) {
          result = pk - pj;
          k = j;
          found = false;
          break;
        }
      }
    }
    System.out.println(result);
  }

  private static void OtherWay() {
    int answer = 0;
    for(int k = 1; k < 2999; k++) {
      for(int j = 1; j < 3000; j++) {
        int pk = k * (3 * k - 1) / 2;
        int pj = j * (3 * j - 1) / 2;
        int d = Math.abs(pk - pj);
        if(!isPentagonal(d)) continue;
        if(isPentagonal(pj + pk)) {
          answer = d;
        }
      }
    }
    System.out.println(answer);
  }

  public static void main(String[] args) {
    OtherWay();
    //BrutForce();
  }
}
